version: '3.9'

services:
    mongo:
      image: mongo
      restart: always
      volumes:
        - ../../entrypoint/mongo/init_db.js:/docker-entrypoint-initdb.d/init_db.js
      healthcheck:
        test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
        interval: 10s
        timeout: 5s
        retries: 5

    backend:
      build: ../../.
      image: backend-image
      env_file:
        - ../../.env.example
      healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8000/api/openapi"]
        interval: 15s
        timeout: 5s
        retries: 5
      depends_on:
        mongo:
          condition: service_healthy
      expose:
        - 8000

    tests:
      image: backend-image
      working_dir: /app/backend/tests/functional
      env_file:
        - .env.example
      entrypoint: >
        sh -c "pip install -r requirements.txt
        && pytest src_tests
        || (echo 'Tests failed '; exit 1)"
      depends_on:
        - backend

    nginx:
      image: nginx:1.23.4-alpine
      volumes:
        - ../../nginx.conf:/etc/nginx/nginx.conf:ro
        - ../../configs/nginx:/etc/nginx/conf.d:ro
        - ../../tmp/logs/nginx/:/var/log/nginx/
      depends_on:
        backend:
          condition: service_healthy
      ports:
        - "80:80"
      logging:
        driver: gelf
        options:
          gelf-address: udp://127.0.0.1:5044
          tag: nginx

    logstash:
      image: logstash:7.10.1
      environment:
        ES_HOST: "elasticsearch:9200"
      volumes:
        - ../../configs/logstash.conf:/config/logstash.conf:ro
        - ../../tmp/logs/nginx/:/var/log/nginx/:ro
      command: logstash -f /config/logstash.conf

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
      environment:
        discovery.type: single-node
      volumes:
        - ../../tmp/esdata:/tmp/elasticsearch/data

    kibana:
      image: docker.elastic.co/kibana/kibana:7.10.2
      depends_on:
        - elasticsearch

    filebeat:
      image: elastic/filebeat:7.3.2
      volumes:
        - ../../tmp/logs/nginx:/var/log/nginx:ro
        - ../../configs/filebeat.yml:/usr/share/filebeat/filebeat.yml
      depends_on:
        - backend
        - nginx
        - logstash
        - elasticsearch
        - kibana
      links:
        - logstash

volumes:
    backend_mongo_volume:
      name: backend_test_mongo_volume
